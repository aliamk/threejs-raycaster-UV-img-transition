{"id":"js/shader/fragment.glsl","dependencies":[{"name":"C:\\Users\\ALIA\\Documents\\Coding_Tutorials\\Three.js\\plane-deformations\\package.json","includedInParent":true,"mtime":1617052069081}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying float vNoise;\\nuniform sampler2D onTexture;\\nuniform float time;\\n\\nvoid main()\\t{\\n\\t// gl_FragColor = vec4(1., 0., 0.0, 1.);\\n\\t// vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\t\\n\\n\\tvec3 color1 = vec3(1., 0., 0.);\\n\\tvec3 color2 = vec3(1., 1., 1.);\\n\\tvec3 finalColor = mix(color1, color2, 0.5 * (vNoise + 1.));\\t\\n\\n\\tvec2 newUV = vUv;\\n\\tnewUV = vec2(newUV.x, newUV.y + 0.01 * sin(newUV.x * 10. + time));\\n\\tvec4 onLogo = texture2D(onTexture, vUv);\\n\\t//\\n\\tgl_FragColor = vec4(finalColor, 1.);\\n\\tgl_FragColor = vec4(vUv, 0., 1.);\\n\\tgl_FragColor = onLogo;\\n\\t// gl_FragColor = vec4(vNoise);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":678},"source":"js/shader/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying float vNoise;\\nuniform sampler2D onTexture;\\nuniform float time;\\n\\nvoid main()\\t{\\n\\t// gl_FragColor = vec4(1., 0., 0.0, 1.);\\n\\t// vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\\t\\n\\n\\tvec3 color1 = vec3(1., 0., 0.);\\n\\tvec3 color2 = vec3(1., 1., 1.);\\n\\tvec3 finalColor = mix(color1, color2, 0.5 * (vNoise + 1.));\\t\\n\\n\\tvec2 newUV = vUv;\\n\\tnewUV = vec2(newUV.x, newUV.y + 0.01 * sin(newUV.x * 10. + time));\\n\\tvec4 onLogo = texture2D(onTexture, vUv);\\n\\t//\\n\\tgl_FragColor = vec4(finalColor, 1.);\\n\\tgl_FragColor = vec4(vUv, 0., 1.);\\n\\tgl_FragColor = onLogo;\\n\\t// gl_FragColor = vec4(vNoise);\\n}\";"},"lineCount":null}},"error":null,"hash":"8e71c1a5f5776e3be360fff826acda1f","cacheData":{"env":{}}}